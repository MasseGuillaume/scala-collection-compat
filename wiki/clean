
scala.Predef
  (renamed)
    `=:=`
      tpEquals => refl (implicit)

  (removed)
    unwrapString
    unaugmentString

== collection =================================================================================================
  (removed)
    breakOut  see: https://github.com/scala/scala-collection-compat/blob/master/scalafix/output213/src/main/scala/fix/BreakoutSrc.scala

  Iterator (https://github.com/scala/bug/issues/10961)
    (removed)
      def aggregate[B](z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B
      def copyToArray(xs: Array[A]): Unit
      def corresponds[B](that: GenTraversableOnce[B])(p: (A, B) ⇒ Boolean): Boolean
      def hasDefiniteSize: Boolean
      def isTraversableAgain: Boolean
      def padTo(len: Int, elem: A): Iterator[A]
      def partition(p: (A) ⇒ Boolean): (Iterator[A], Iterator[A])
      def toTraversable: Traversable[A]


    (more strict)
      old: def sameElements(that: Iterator[_]): Boolean
      new: def sameElements[B >: A](that: IterableOnce[B]): Boolean

      old: def zipAll[A1 >: A, B](that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]
      new: def zipAll[B](that: Iterator[B], thisElem: A, thatElem: B): Iterator[(A, B)]

  StringOps (https://github.com/scala/bug/issues/10976)
    (removed)
      canEqual (from: IterableLike, Equals)

  Searching (https://github.com/scala/bug/issues/10977)
    SearchImpl
      (removed)
        search (add deprecation and forward to Searching.search)

  IterableOps (https://github.com/scala/bug/issues/10974)
    (removed)
      missing methods from TraversableLike
        def ++:[B](that: TraversableOnce[B]): Traversable[B]
        def view(from: Int, until: Int): TraversableView[A, Repr]

      missing methods from GenTraversableLike
        def repr: Repr
        def stringPrefix: String

        def sameElements(that: GenIterable[A]): Boolean

  IterableOnceOps (https://github.com/scala/bug/issues/10974)
    (removed)
      missing methods from IterableOnce
        defcopyToBuffer(dest: Buffer[B]): Unit

      missing methods from GenTraversableOnce
        def copyToArray(xs: Array[A]): Unit

        def hasDefiniteSize: Boolean
        def isTraversableAgain: Boolean
        def toBuffer[A1 >: A]: Buffer[A1]
        def toIterator: Iterator[A]

  SetOps (https://github.com/scala/bug/issues/10984)
    (removed)
      missing methods from SetLike
        def +(elem1: Int, elem2: Int, elems: Int*): This
        def -(elem1: Int, elem2: Int, elems: Int*): This

  MapOps (https://github.com/scala/bug/issues/10984)
    (removed)
      missing method from MapLike
        def +[B1 >: B](elem1: (A, B1), elem2: (A, B1), elems: (A, B1)*): This

  SeqOps (https://github.com/scala/scala-collection-compat/issues/85)
    (return type, view vs strict)
      reverseMap

  MapOps (https://github.com/scala/scala-collection-compat/issues/85)
    (return type, view vs strict)
      filterKeys
      mapValues

  IterableFactory / LazyListFactory (https://github.com/scala/bug/issues/10975)
    (removed)
      missing method from scala.collection.generic.GenTraversableFactory
        def concat[A](xss: Traversable[A]*): CC[A]

== generic =================================================================================================
  https://github.com/scala/bug/issues/10978
    (removed)
      Sizing
      SliceInterval

    (moved to scala.collection.mutable)
      Clearable
      Subtractable
      Growable
      Shrinkable

== immutable =================================================================================================
    Stream#
      (removed)
        print

    Stream.
      (removed)
        def concat[A](xss: collection.Traversable[A]*): Stream[A]
        class StreamBuilder[A]


    StreamIterator (missing)

    TreeMap
      (missing)
        def compare(k0: A, k1: A): Int

    ::
      (missing)
      def apply(n: Int): B


== mutable =================================================================================================

  ArrayBuffer (https://github.com/scala/bug/issues/10981)
    +=:, ++=:         removed
    result            removed (Builder)
    stringPrefix      removed (GenTraversableLike)

    ArrayBuilder (now sealed)

    ArrayLike (https://github.com/scala/bug/issues/10985)
      deep

    ArrayOps (https://github.com/scala/bug/issues/10986)
      of* (use ArraySeq ?)

    GrowableBuilder (renamed with deprecation from GrowingBuilder)
      +=   (removed)

    HashMap
      mapResult (https://github.com/scala/bug/issues/10988)

    LinkedHashMap
      WithFilter
      Entry

      min, max, minBy, maxBy (different return type)



    PriorityQueue
      orderedCompanion (GenericOrderedTraversableTemplate)

    Queue
      enqueue
        old:
          def enqueue(elems: A*): Unit

        new:
          def enqueue(elem1: A, elem2: A, elems: A*): Queue.this.type
          def enqueue(elem: A): Queue.this.type


    SortedMap
      updated (GenMap) (https://github.com/scala/bug/issues/10990)


    StringBuilder
      constructor
        (keep parameter names)
        new StringBuilder(initCapacity: Int, initValue: String) (missing)

    TreeSet
      keysIteratorFrom (Sorted)




===============================================================================================================

new api


  seq / companion missing


  SeqOps (https://github.com/scala/bug/issues/10973)
    default parameter is not the same with eta-expension (https://github.com/scala/bug/issues/10973)

      def indexOf[B >: A](elem: B): Int
      def indexOf[B >: A](elem: B, from: Int = 0): Int

      indexOf
      indexOfSlice
      indexWhere
      lastIndexOf
      lastIndexOfSlice
      lastIndexWhere


  scaladoc

    max/maxBy/min/minBy (use case scaladoc looks bad)
    https://static.javadoc.io/org.scala-lang/scala-library/2.13.0-M4/scala/collection/mutable/HashMap.html#max:(K,V)


  sys.process.ProcessBuilder (https://github.com/scala/bug/issues/10993)

    update scaladoc to remove lineStream_! usage (deprecated)
